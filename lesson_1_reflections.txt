Q:
How did viewing a diff between two versions of a file help you see the bug that was introduced?

A:
Lines that had difference were marked, 
so we could skip the lines that were not modified, 
and only check lines that were different.

Q:
How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

A:
Would be easy to manage different versions of apps.
As progrommer you wouldn't have to spend time keeping and managing of different versions of the app
and various files and folders.

Q:
What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

A:
Pros: User can decide when to commit and make sure that all the commits are logical.
Cons: Requires User's action to commit changes and therefore user will have to bear responsibilty in case he forgot to commit some important changes.

Q:
Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

A:
Git like version control systems are designed to assist programer to keep its codebase managed.
By providing him an option to track differences between various change of his app.
while others, like Google Docs are designed for more general purpose usage.

Q:
How can you use the commands git log and git diff to view the history of files?

A:
First check the commit ids using "git log" for which you want to history of.
Then use "git diff" to check the difference between those  two files.

Q:
How might using version control make you more confident to make changes that could break something?

A:
Using version control you can checkout to previous version of an app in case of any bug in the current version.

Q:
How Do You Want to Use Git

A:
As a version control system for software projects.